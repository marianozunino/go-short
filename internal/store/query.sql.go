// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package store

import (
	"context"
	"database/sql"
)

const createUrl = `-- name: CreateUrl :one
INSERT INTO urls
  ( url, code, md5 )
VALUES
  ( ?, ?, ? )
ON CONFLICT (md5)
DO UPDATE SET md5 = EXCLUDED.md5
RETURNING id, url, code, md5, hits, last_used, created_at
`

type CreateUrlParams struct {
	Url  string
	Code string
	Md5  string
}

func (q *Queries) CreateUrl(ctx context.Context, arg CreateUrlParams) (Url, error) {
	row := q.db.QueryRowContext(ctx, createUrl, arg.Url, arg.Code, arg.Md5)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Code,
		&i.Md5,
		&i.Hits,
		&i.LastUsed,
		&i.CreatedAt,
	)
	return i, err
}

const deleteUrlByLastUsed = `-- name: DeleteUrlByLastUsed :exec
DELETE FROM urls
WHERE last_used < ?
`

func (q *Queries) DeleteUrlByLastUsed(ctx context.Context, lastUsed sql.NullTime) error {
	_, err := q.db.ExecContext(ctx, deleteUrlByLastUsed, lastUsed)
	return err
}

const getUrlByCode = `-- name: GetUrlByCode :one
SELECT id, url, code, md5, hits, last_used, created_at FROM urls
WHERE code = ? LIMIT 1
`

func (q *Queries) GetUrlByCode(ctx context.Context, code string) (Url, error) {
	row := q.db.QueryRowContext(ctx, getUrlByCode, code)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Code,
		&i.Md5,
		&i.Hits,
		&i.LastUsed,
		&i.CreatedAt,
	)
	return i, err
}

const getUrlById = `-- name: GetUrlById :one
SELECT id, url, code, md5, hits, last_used, created_at FROM urls
WHERE id = ? LIMIT 1
`

func (q *Queries) GetUrlById(ctx context.Context, id int64) (Url, error) {
	row := q.db.QueryRowContext(ctx, getUrlById, id)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.Url,
		&i.Code,
		&i.Md5,
		&i.Hits,
		&i.LastUsed,
		&i.CreatedAt,
	)
	return i, err
}

const incrementUrlHitsById = `-- name: IncrementUrlHitsById :exec
UPDATE urls
SET hits = hits + 1,
    last_used = CURRENT_TIMESTAMP
WHERE id = ?
`

func (q *Queries) IncrementUrlHitsById(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, incrementUrlHitsById, id)
	return err
}
